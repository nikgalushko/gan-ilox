program -> declaration* EOF
declaration -> varDeclaration | statement;
varDeclaration -> "var" IDENTIFIER ("=" expression)? ";";
statement -> expressionStatement | ifStatement | printStatement | forStatement | block;
expressionStatement -> expression ";";
ifStatement -> "if" "(" expression ")" block ("else" ifStatement | block)? ;
printStatement -> "print" expresion ";";
forStatement -> "for" "(" ((varDeclaration | expressionStatement) ";")? (expresion | ";")?  (expresion)? ")" block;
block -> "{" declaration* "}";
expresion -> assignment;
assignment -> IDENTIFIER "=" assignment | equality;
logic_or -> logic_and ("or" logic_and)*;
logic_and -> equality ("and" equality)*;
equality -> comparison ( ("==" | "!=") comparison)*;
comparison -> term ( ("<" | "<=" | ">" | ">=") term )*;
term -> factor ( ("+" | "-" | "&" | "|") factor)*;
factor -> unary ( ("/" | "*" | "^") unary )*;
unary -> ("!" | "-" | "~") unary | primary;
primary -> NUMBER | STRING | "true" | "false" | nil | "(" expresion ")" | IDENTIFIER;